// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DmitryM7/yapr56.git/internal/controller (interfaces: IStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/DmitryM7/yapr56.git/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIStorage is a mock of IStorage interface.
type MockIStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIStorageMockRecorder
}

// MockIStorageMockRecorder is the mock recorder for MockIStorage.
type MockIStorageMockRecorder struct {
	mock *MockIStorage
}

// NewMockIStorage creates a new mock instance.
func NewMockIStorage(ctrl *gomock.Controller) *MockIStorage {
	mock := &MockIStorage{ctrl: ctrl}
	mock.recorder = &MockIStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStorage) EXPECT() *MockIStorageMockRecorder {
	return m.recorder
}

// CreatePeson mocks base method.
func (m *MockIStorage) CreatePeson(arg0 context.Context, arg1 models.Person) (models.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePeson", arg0, arg1)
	ret0, _ := ret[0].(models.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePeson indicates an expected call of CreatePeson.
func (mr *MockIStorageMockRecorder) CreatePeson(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePeson", reflect.TypeOf((*MockIStorage)(nil).CreatePeson), arg0, arg1)
}

// GetPesonByCredential mocks base method.
func (m *MockIStorage) GetPesonByCredential(arg0 context.Context, arg1, arg2 string) (models.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPesonByCredential", arg0, arg1, arg2)
	ret0, _ := ret[0].(models.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPesonByCredential indicates an expected call of GetPesonByCredential.
func (mr *MockIStorageMockRecorder) GetPesonByCredential(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPesonByCredential", reflect.TypeOf((*MockIStorage)(nil).GetPesonByCredential), arg0, arg1, arg2)
}
