// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DmitryM7/yapr56.git/internal/controller (interfaces: IStorage)

// Package mock_controller is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/DmitryM7/yapr56.git/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIStorage is a mock of IStorage interface.
type MockIStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIStorageMockRecorder
}

// MockIStorageMockRecorder is the mock recorder for MockIStorage.
type MockIStorageMockRecorder struct {
	mock *MockIStorage
}

// NewMockIStorage creates a new mock instance.
func NewMockIStorage(ctrl *gomock.Controller) *MockIStorage {
	mock := &MockIStorage{ctrl: ctrl}
	mock.recorder = &MockIStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStorage) EXPECT() *MockIStorageMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m *MockIStorage) CreateOrder(arg0 context.Context, arg1 models.Person, arg2 models.POrder) (models.POrder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", arg0, arg1, arg2)
	ret0, _ := ret[0].(models.POrder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr *MockIStorageMockRecorder) CreateOrder(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockIStorage)(nil).CreateOrder), arg0, arg1, arg2)
}

// CreatePeson mocks base method.
func (m *MockIStorage) CreatePeson(arg0 context.Context, arg1 models.Person) (models.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePeson", arg0, arg1)
	ret0, _ := ret[0].(models.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePeson indicates an expected call of CreatePeson.
func (mr *MockIStorageMockRecorder) CreatePeson(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePeson", reflect.TypeOf((*MockIStorage)(nil).CreatePeson), arg0, arg1)
}

// GetBalance mocks base method.
func (m *MockIStorage) GetBalance(arg0 context.Context, arg1 models.Person) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalance indicates an expected call of GetBalance.
func (mr *MockIStorageMockRecorder) GetBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockIStorage)(nil).GetBalance), arg0, arg1)
}

// GetOrder mocks base method.
func (m *MockIStorage) GetOrder(arg0 context.Context, arg1 models.POrder) (models.POrder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrder", arg0, arg1)
	ret0, _ := ret[0].(models.POrder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrder indicates an expected call of GetOrder.
func (mr *MockIStorageMockRecorder) GetOrder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrder", reflect.TypeOf((*MockIStorage)(nil).GetOrder), arg0, arg1)
}

// GetOrders mocks base method.
func (m *MockIStorage) GetOrders(arg0 context.Context, arg1 models.Person) ([]models.POrder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrders", arg0, arg1)
	ret0, _ := ret[0].([]models.POrder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrders indicates an expected call of GetOrders.
func (mr *MockIStorageMockRecorder) GetOrders(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrders", reflect.TypeOf((*MockIStorage)(nil).GetOrders), arg0, arg1)
}

// GetPersonByID mocks base method.
func (m *MockIStorage) GetPersonByID(arg0 context.Context, arg1 int) (models.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersonByID", arg0, arg1)
	ret0, _ := ret[0].(models.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPersonByID indicates an expected call of GetPersonByID.
func (mr *MockIStorageMockRecorder) GetPersonByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersonByID", reflect.TypeOf((*MockIStorage)(nil).GetPersonByID), arg0, arg1)
}

// GetPesonByCredential mocks base method.
func (m *MockIStorage) GetPesonByCredential(arg0 context.Context, arg1, arg2 string) (models.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPesonByCredential", arg0, arg1, arg2)
	ret0, _ := ret[0].(models.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPesonByCredential indicates an expected call of GetPesonByCredential.
func (mr *MockIStorageMockRecorder) GetPesonByCredential(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPesonByCredential", reflect.TypeOf((*MockIStorage)(nil).GetPesonByCredential), arg0, arg1, arg2)
}
